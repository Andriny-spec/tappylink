'use client';

import { useRef, useState, useEffect } from "react";
import { Button } from "@/components/ui/button";
import { Check } from "lucide-react";
import { PaymentModal } from "@/components/ui/payment-modal";
import { Header } from "@/components/ui/header";
import { Footer } from "@/components/ui/footer";
import { FeaturesCarousel } from "@/components/ui/features-carousel";
import { motion, AnimatePresence } from "framer-motion";
import {
  Accordion,
  AccordionContent,
  AccordionItem,
  AccordionTrigger,
} from "@/components/ui/accordion";
import TypewriterText from "@/components/ui/typewriter-text";

export default function Home() {
  const faqRef = useRef<HTMLDivElement>(null);
  const [isPaymentModalOpen, setIsPaymentModalOpen] = useState(false);
  const [selectedPlan, setSelectedPlan] = useState<{
    title: string;
    price: string;
    installments: string;
  } | null>(null);

  const handleBuyClick = (plan: {
    title: string;
    price: string;
    installments: string;
  }) => {
    setSelectedPlan(plan);
    setIsPaymentModalOpen(true);
  };

  const steps = [
    {
      title: "Crie seu cartão digital",
      description: "Cadastre-se na plataforma e personalize seu cartão profissional com suas informações essenciais.",
    },
    {
      title: "Ative o NFC ou QR Code",
      description: "Escolha entre a tecnologia NFC ou QR Code para compartilhar seus contatos com facilidade.",
    },
    {
      title: "Comece a compartilhar!",
      description: "Aproxime o celular de um cliente ou faça com que ele escaneie o QR Code para acessar seus dados instantaneamente.",
    },
  ];

  const plans = [
    {
      title: "Plano Individual",
      price: "R$ 247,00",
      installments: "6x de R$ 49,00",
      features: [
        "1 Cartão Digital Personalizável",
        "Link para redes sociais e site",
        "Tecnologia NFC e QR Code",
        "Edição ilimitada",
        "Suporte dedicado",
      ],
    },
    {
      title: "Plano Profissional",
      price: "R$ 397,00",
      installments: "6x de R$ 79,00",
      features: [
        "Tudo do plano Individual",
        "3 Cartões Digitais para equipe",
        "Estatísticas de acessos",
        "Personalização avançada",
        "Prioridade no suporte",
      ],
      popular: true,
    },
    {
      title: "Plano Empresarial",
      price: "Sob consulta",
      installments: "Valores personalizados",
      features: [
        "Tudo do plano Profissional",
        "Personalização com a identidade da empresa",
        "Integração com CRM",
        "API disponível",
        "Gerenciamento de equipe",
      ],
    },
  ];

  const faqs = [
    {
      question: "O que é o Tappy ID?",
      answer: "O Tappy ID é uma solução moderna de cartão de visita digital que utiliza tecnologia NFC e QR Code para compartilhar suas informações profissionais de forma rápida e elegante.",
    },
    {
      question: "Como funciona o NFC e QR Code?",
      answer: "O NFC permite compartilhar informações aproximando dois dispositivos, enquanto o QR Code pode ser escaneado pela câmera do celular. Ambos direcionam para seu perfil profissional digital.",
    },
    {
      question: "Preciso instalar algum aplicativo?",
      answer: "Não é necessário instalar nenhum aplicativo. O Tappy ID funciona diretamente pelo navegador do celular.",
    },
    {
      question: "Posso atualizar meus dados depois?",
      answer: "Sim! Você pode atualizar suas informações a qualquer momento através da plataforma, sem precisar de um novo cartão.",
    },
    {
      question: "O Tappy ID funciona em todos os celulares?",
      answer: "Sim! O QR Code funciona em qualquer celular com câmera. Para NFC, é necessário que o dispositivo tenha suporte a esta tecnologia.",
    },
  ];

  return (
    <>
      <Header />
      <main className="min-h-[200vh] bg-[#0a192f] pt-20 relative">
        {/* Background com efeitos visuais animados - cobrindo toda a página */}
        <div className="fixed inset-0 overflow-hidden pointer-events-none z-[-2]">
          {/* Grade de fundo */}
          <div className="fixed inset-0 bg-[url('/grid.svg')] bg-center opacity-30 z-[-2]" />
          
          {/* Blur verde grande no topo com movimento fluido */}
          <motion.div 
            className="absolute -top-[10%] left-0 w-[100vw] h-[100vh] bg-[#17d300]/30 blur-[150px] rounded-full"
            animate={{
              x: ['-5%', '5%', '-5%'],
              y: ['0%', '-5%', '0%']
            }}
            transition={{
              repeat: Infinity,
              duration: 20,
              ease: "linear"
            }}
          />
          
          {/* Blur verde no meio com movimento fluido */}
          <motion.div 
            className="absolute top-[40%] -right-[10%] w-[80vw] h-[80vh] bg-[#17d300]/30 blur-[120px] rounded-full"
            animate={{
              x: ['0%', '-5%', '0%'],
              y: ['0%', '5%', '0%']
            }}
            transition={{
              repeat: Infinity,
              duration: 25,
              ease: "linear"
            }}
          />
          
          {/* Blur azul escuro com movimento fluido */}
          <motion.div 
            className="absolute top-[70%] -left-[10%] w-[80vw] h-[80vh] bg-[#112240]/50 blur-[100px] rounded-full"
            animate={{
              x: ['0%', '10%', '0%'],
              y: ['0%', '-10%', '0%']
            }}
            transition={{
              repeat: Infinity,
              duration: 30,
              ease: "linear"
            }}
          />
          
          {/* Blur verde pequeno destacado com movimento circular */}
          <motion.div 
            className="absolute top-[20%] right-[10%] w-[40vw] h-[40vh] bg-[#17d300]/35 blur-[80px] rounded-full"
            animate={{
              x: ['0%', '10%', '0%', '-10%', '0%'],
              y: ['0%', '-10%', '-15%', '-10%', '0%']
            }}
            transition={{
              repeat: Infinity,
              duration: 18,
              ease: "linear"
            }}
          />

          {/* Blur adicional no meio com movimento ondular */}
          <motion.div 
            className="absolute top-[50%] left-[20%] w-[40vw] h-[40vh] bg-[#17d300]/40 blur-[70px] rounded-full"
            animate={{
              x: ['-5%', '5%', '-5%'],
              y: ['-5%', '5%', '-5%']
            }}
            transition={{
              repeat: Infinity,
              duration: 22,
              ease: "linear"
            }}
          />
        </div>
        
        {/* Pontos flutuantes */}
        <div className="absolute inset-0 overflow-hidden">
          {Array.from({ length: 50 }).map((_, i) => (
            <motion.div
              key={i}
              className="absolute rounded-full bg-[#17d300]/50"
              initial={{ 
                x: Math.random() * 100 + "%", 
                y: Math.random() * 100 + "%",
                opacity: 0.3,
                scale: 0.3
              }}
              animate={{ 
                opacity: [0.3, 0.7, 0.3],
                scale: [0.3, 0.6, 0.3]
              }}
              transition={{ 
                repeat: Infinity, 
                duration: 3 + Math.random() * 4,
                ease: "easeInOut"
              }}
              style={{
                width: 8 + Math.random() * 16,
                height: 8 + Math.random() * 16,
              }}
            />
          ))}
        </div>
        
        {/* Filtro semi-transparente para o efeito glassmorphism */}
        <div className="absolute inset-0 bg-[#0a192f]/80 backdrop-blur-md" />
        
        {/* Container principal para todo o conteúdo */}
        <div className="relative w-full pt-10 z-10">
        
          {/* Hero Section */}
          <section className="relative py-20 overflow-hidden">
            <div className="container px-4 mx-auto text-center">
              <div className="flex flex-col items-center justify-center max-w-4xl mx-auto">
                <motion.h1 
                  className="text-4xl md:text-6xl font-bold mb-6 font-['Poppins'] relative"
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.8 }}
                >
                  <TypewriterText 
                    texts={[
                      "Torne sua identidade digital mais profissional!",
                      "Compartilhe seus contatos de forma moderna e prática!",
                      "Impressione seus clientes com o Tappy ID!"
                    ]}
                    typingSpeed={50}
                    deletingSpeed={30}
                    pauseBetweenTexts={2500}
                    loop={true}
                    highlightSecondWord={true}
                  />
                </motion.h1>
                <motion.p 
                  className="text-xl text-gray-300 mb-8 font-['Poppins']"
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  transition={{ delay: 0.5, duration: 0.8 }}
                >
                  A forma mais moderna e prática de compartilhar seu contato profissional!
                </motion.p>
                <motion.p 
                  className="text-gray-400 mb-8 font-['Poppins'] max-w-3xl"
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  transition={{ delay: 0.8, duration: 0.8 }}
                >
                  Pare de perder oportunidades por falta de um cartão de visita atualizado! O Tappy ID permite que você compartilhe suas informações de forma simples, elegante e digital, utilizando NFC e QR Code.
                </motion.p>
                <motion.div
                  initial={{ opacity: 0, scale: 0.9 }}
                  animate={{ opacity: 1, scale: 1 }}
                  transition={{ delay: 1.2, duration: 0.5 }}
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                  className="relative"
                >
                  <div className="absolute -inset-1 bg-gradient-to-r from-[#17d300] to-[#15bb00] rounded-full opacity-70 blur-md group-hover:opacity-100 transition duration-1000 group-hover:duration-200 animate-pulse"></div>
                  <Button
                    className="bg-[#17d300] hover:bg-[#15bb00] text-white font-['Poppins'] font-semibold py-6 px-10 rounded-full relative z-10 shadow-lg shadow-[#17d300]/20"
                    size="lg"
                    onClick={() => faqRef.current?.scrollIntoView({ behavior: "smooth" })}
                  >
                    TESTE GRÁTIS AGORA
                  </Button>
                </motion.div>
              </div>
            </div>
          </section>

          <FeaturesCarousel />

          {/* How it Works Section */}
          <section className="py-20" id="como-funciona">
            <div className="container px-4 mx-auto">
              <div className="flex flex-col items-center mb-16">
                <motion.div
                  className="px-3 py-1 rounded-full bg-[#17d300]/20 border border-[#17d300]/40 mb-4"
                  initial={{ opacity: 0, y: -10 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5 }}
                >
                  <span className="text-[#17d300] text-sm font-semibold font-poppins">SIMPLES E PRÁTICO</span>
                </motion.div>
                <motion.h2 
                  className="text-3xl md:text-5xl font-bold text-center text-white mb-4 font-poppins"
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.8 }}
                >
                  Como funciona o <span className="bg-gradient-to-r from-[#17d300] to-[#15bb00] bg-clip-text text-transparent">Tappy ID</span>?
                </motion.h2>
                <motion.p
                  className="text-gray-400 text-center max-w-2xl mb-10 font-poppins"
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  transition={{ delay: 0.3, duration: 0.8 }}
                >
                  Três passos simples para revolucionar a forma como você compartilha seus contatos profissionais
                </motion.p>
              </div>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
                {steps.map((step, index) => (
                  <motion.div 
                    key={index} 
                    className="text-center px-6 py-8 rounded-xl backdrop-blur-sm bg-[#112240]/50 border border-[#233554] shadow-lg"
                    initial={{ opacity: 0, y: 30 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ delay: 0.2 * index, duration: 0.8 }}
                    whileHover={{ scale: 1.03, boxShadow: "0 10px 25px -5px rgba(23, 211, 0, 0.1)" }}
                  >
                    <motion.div 
                      className="w-16 h-16 rounded-full bg-[#17d300] text-white text-2xl font-bold flex items-center justify-center mx-auto mb-6 shadow-md shadow-[#17d300]/30"
                      whileHover={{ scale: 1.1, rotate: 5 }}
                    >
                      {index + 1}
                    </motion.div>
                    <h3 className="text-xl font-semibold text-white mb-4 font-poppins">
                      {step.title}
                    </h3>
                    <p className="text-gray-400 font-poppins">
                      {step.description}
                    </p>
                  </motion.div>
                ))}
              </div>
            </div>
          </section>

          {/* Pricing Section */}
          <section className="py-24 backdrop-blur-sm" id="planos">
            <div className="container px-4 mx-auto">
              <div className="flex flex-col items-center mb-16">
                <motion.div
                  className="px-3 py-1 rounded-full bg-[#17d300]/20 border border-[#17d300]/40 mb-4"
                  initial={{ opacity: 0, y: -10 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5 }}
                >
                  <span className="text-[#17d300] text-sm font-semibold font-poppins">ESCOLHA SEU PLANO</span>
                </motion.div>
                <motion.h2 
                  className="text-3xl md:text-5xl font-bold text-center text-white mb-4 font-poppins"
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.8 }}
                >
                  Planos <span className="bg-gradient-to-r from-[#17d300] to-[#15bb00] bg-clip-text text-transparent">acessíveis</span> para todos
                </motion.h2>
                <motion.p
                  className="text-gray-400 text-center max-w-2xl mb-10 font-poppins"
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  transition={{ delay: 0.3, duration: 0.8 }}
                >
                  Escolha o plano ideal para suas necessidades e comece a compartilhar seu contato de forma profissional
                </motion.p>
              </div>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-8 py-6">
                {plans.map((plan, index) => (
                  <motion.div
                    key={index}
                    className="relative flex flex-col h-full overflow-hidden"
                    initial={{ opacity: 0, y: 30 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ delay: 0.2 * index, duration: 0.8 }}
                  >
                    {/* Fundo com efeito glassmorphism */}
                    <div className={`absolute inset-0 bg-[#112240]/40 backdrop-blur-xl border rounded-3xl ${plan.popular ? "border-[#17d300]/50" : "border-[#233554]/50"}`} />
                    
                    {/* Gradiente no topo do card */}
                    <div className={`absolute top-0 left-0 right-0 h-24 ${plan.popular ? "bg-gradient-to-b from-[#17d300]/20 to-transparent" : "bg-gradient-to-b from-[#233554]/30 to-transparent"} rounded-t-3xl`} />
                    
                    {/* Conteúdo do card */}
                    <motion.div
                      className="relative z-10 p-8 flex flex-col h-full"
                      whileHover={{ 
                        y: -5,
                        boxShadow: plan.popular
                          ? "0 25px 50px -12px rgba(23, 211, 0, 0.25)"
                          : "0 25px 50px -12px rgba(35, 53, 84, 0.4)" 
                      }}
                    >
                      {/* Badge popular */}
                      {plan.popular && (
                        <motion.div 
                          className="absolute -top-4 right-8 bg-[#17d300] text-white px-5 py-1.5 rounded-full text-sm font-medium font-poppins flex items-center gap-1.5 shadow-lg shadow-[#17d300]/20"
                          initial={{ scale: 0.9 }}
                          animate={{ scale: [0.9, 1.1, 1] }}
                          transition={{ duration: 0.5 }}
                        >
                          <span className="inline-block w-2 h-2 bg-white rounded-full animate-pulse"/> 
                          MAIS POPULAR
                        </motion.div>
                      )}
                      
                      {/* Ícone do plano */}
                      <div className={`w-16 h-16 rounded-2xl mb-6 flex items-center justify-center ${plan.popular ? "bg-[#17d300]/20" : "bg-[#233554]/30"}`}>
                        <motion.div 
                          initial={{ rotate: 0 }}
                          animate={{ rotate: 360 }}
                          transition={{ duration: 20, repeat: Infinity, ease: "linear" }}
                          className="opacity-75"
                        >
                          <div className={`w-10 h-10 rounded-full border-2 ${plan.popular ? "border-[#17d300]" : "border-white/30"} flex items-center justify-center`}>
                            <div className={`w-6 h-6 rounded-full ${plan.popular ? "bg-[#17d300]" : "bg-white/30"}`} />
                          </div>
                        </motion.div>
                      </div>
                      
                      {/* Nome do plano */}
                      <div className="border-b border-[#233554] pb-4 mb-4">
                        <h3 className="text-2xl font-bold text-white mb-1 font-poppins">{plan.title}</h3>
                        <p className="text-sm text-gray-400 font-poppins">{index === 0 ? "Perfeito para iniciantes" : index === 1 ? "O melhor custo-benefício" : "Ideal para empresas"}</p>
                      </div>
                      
                      {/* Preço */}
                      <div className="mb-6">
                        <p className="text-5xl font-bold text-white mb-2 font-poppins">
                          <span className={`${plan.popular ? "text-[#17d300]" : "text-white"}`}>{plan.price}</span>
                        </p>
                        <p className="text-gray-400 font-poppins">ou {plan.installments}</p>
                      </div>
                      
                      {/* Linha separadora com gradiente */}
                      <div className={`h-px w-full ${plan.popular ? "bg-gradient-to-r from-transparent via-[#17d300]/50 to-transparent" : "bg-gradient-to-r from-transparent via-[#233554] to-transparent"} my-4`}></div>
                      
                      {/* Features */}
                      <ul className="space-y-4 mb-8 flex-grow">
                        {plan.features.map((feature, featureIndex) => (
                          <motion.li 
                            key={featureIndex} 
                            className="flex items-center gap-3"
                            initial={{ opacity: 0, x: -10 }}
                            animate={{ opacity: 1, x: 0 }}
                            transition={{ delay: 0.1 * featureIndex + 0.5, duration: 0.5 }}
                          >
                            <div className={`flex-shrink-0 w-5 h-5 rounded-full flex items-center justify-center ${plan.popular ? "bg-[#17d300]/20" : "bg-[#233554]/50"}`}>
                              <Check className={`w-3 h-3 ${plan.popular ? "text-[#17d300]" : "text-white"}`} />
                            </div>
                            <span className="text-gray-300 font-poppins">{feature}</span>
                          </motion.li>
                        ))}
                      </ul>
                      
                      {/* Botão */}
                      <motion.div
                        className="relative"
                        whileHover={{ scale: 1.03 }}
                        whileTap={{ scale: 0.98 }}
                      >
                        {plan.popular && (
                          <div className="absolute -inset-1 bg-gradient-to-r from-[#17d300] to-[#15bb00] rounded-full opacity-70 blur-md transition duration-1000 group-hover:duration-200 animate-pulse"></div>
                        )}
                        <Button
                          className={`w-full ${plan.popular ? "bg-[#17d300] hover:bg-[#15bb00]" : "bg-[#233554]/80 hover:bg-[#233554]"} text-white font-['Poppins'] font-semibold rounded-full shadow-lg ${plan.popular ? "shadow-[#17d300]/20" : "shadow-[#233554]/20"} py-6`}
                          onClick={() =>
                            plan.title === "Plano Empresarial"
                              ? window.location.href = "mailto:contato@tappyid.com"
                              : handleBuyClick(plan)
                          }
                        >
                          {plan.title === "Plano Empresarial"
                            ? "SOLICITAR ORÇAMENTO"
                            : "COMPRAR AGORA"}
                        </Button>
                      </motion.div>
                    </motion.div>
                  </motion.div>
                  </motion.div>
                ))}
              </div>
            </div>
          </section>

          {/* FAQ Section */}
          <section className="py-20" ref={faqRef} id="faq">
            <div className="container px-4 mx-auto">
              <div className="flex flex-col items-center mb-16">
                <motion.div
                  className="px-3 py-1 rounded-full bg-[#17d300]/20 border border-[#17d300]/40 mb-4"
                  initial={{ opacity: 0, y: -10 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5 }}
                >
                  <span className="text-[#17d300] text-sm font-semibold font-poppins">TIRE SUAS DÚVIDAS</span>
                </motion.div>
                <motion.h2 
                  className="text-3xl md:text-5xl font-bold text-center text-white mb-4 font-poppins"
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.8 }}
                >
                  Perguntas <span className="bg-gradient-to-r from-[#17d300] to-[#15bb00] bg-clip-text text-transparent">frequentes</span>
                </motion.h2>
                <motion.p
                  className="text-gray-400 text-center max-w-2xl mb-10 font-poppins"
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  transition={{ delay: 0.3, duration: 0.8 }}
                >
                  Encontre respostas para as principais dúvidas sobre o Tappy ID e como ele pode ajudar sua carreira
                </motion.p>
              </div>
              <motion.div 
                className="max-w-3xl mx-auto rounded-2xl bg-[#112240]/50 backdrop-blur-sm p-6 border border-[#233554] shadow-lg"
                initial={{ opacity: 0, y: 30 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8, delay: 0.2 }}
              >
                <Accordion type="single" collapsible className="w-full">
                  {faqs.map((faq, index) => (
                    <AccordionItem 
                      key={`faq-${index}`} 
                      value={`faq-${index}`}
                      className="border-b border-[#233554] last:border-0"
                    >
                      <AccordionTrigger className="text-white hover:text-white font-poppins font-medium py-4">
                        {faq.question}
                      </AccordionTrigger>
                      <AccordionContent className="text-gray-400 font-poppins pb-4">
                        {faq.answer}
                      </AccordionContent>
                    </AccordionItem>
                  ))}
                </Accordion>
              </motion.div>
              <motion.div 
                className="text-center mt-12"
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8, delay: 0.4 }}
              >
                <p className="text-gray-300 mb-6 font-poppins">
                  Ainda tem dúvidas? Nossa equipe está pronta para ajudar!
                </p>
                <motion.div
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.98 }}
                >
                  <Button
                    className="bg-[#17d300] hover:bg-[#15bb00] text-white font-['Poppins'] rounded-full shadow-md shadow-[#17d300]/20 py-2 px-6"
                    onClick={() => window.location.href = "mailto:suporte@tappyid.com"}
                  >
                    ENTRAR EM CONTATO COM O SUPORTE
                  </Button>
                </motion.div>
              </motion.div>
            </div>
          </section>
        </div>
      </main>
      <Footer />

      <PaymentModal
        isOpen={isPaymentModalOpen}
        onClose={() => {
          setIsPaymentModalOpen(false);
          setSelectedPlan(null);
        }}
        plan={selectedPlan}
      />
    </>
  );
}
